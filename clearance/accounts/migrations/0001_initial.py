# Generated by Django 4.2.4 on 2023-08-18 19:56

import accounts.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='DefaultUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('DAO', 'DAO'), ('SAO', 'SAO'), ('SENATE', 'SENATE'), ('SCREEN', 'SCREEN'), ('STUDENT', 'STUDENT'), ('UAO', 'UAO')], max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Current_Admission_Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('departments', models.ManyToManyField(to='accounts.department')),
            ],
        ),
        migrations.CreateModel(
            name='StudentUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('sex', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Others', 'Others')], default='Male', max_length=20)),
                ('nationality', models.CharField(blank=True, max_length=50, null=True)),
                ('place_of_birth', models.CharField(blank=True, max_length=100, null=True)),
                ('state_of_origin', models.CharField(blank=True, max_length=100, null=True)),
                ('local_government', models.CharField(blank=True, max_length=100, null=True)),
                ('permenant_address', models.TextField(blank=True, null=True)),
                ('contact_address', models.TextField(blank=True, null=True)),
                ('religion', models.CharField(choices=[('Christian', 'Christian'), ('Islam', 'Islam'), ('Traditional', 'Traditional'), ('Others', 'Others')], default='Christian', max_length=20)),
                ('next_of_kin_name', models.CharField(blank=True, max_length=100, null=True)),
                ('next_of_kin_address', models.TextField(blank=True, null=True)),
                ('next_of_kin_relationship', models.CharField(choices=[('Brother', 'Brother'), ('Sister', 'Sister'), ('Father', 'Father'), ('Wife', 'Wife'), ('Husband', 'Husband'), ('Other', 'Other')], default='Brother', max_length=20)),
                ('next_of_kin_telephone', models.CharField(blank=True, max_length=50, null=True)),
                ('sponsor_name', models.CharField(blank=True, max_length=100, null=True)),
                ('sponsor_address', models.TextField(blank=True, null=True)),
                ('marital_status', models.CharField(choices=[('Single', 'Single'), ('Divorced', 'Divorced'), ('Married', 'Married'), ('Widow', 'Widow')], default='Single', max_length=10)),
                ('signature', models.ImageField(blank=True, null=True, upload_to='media/username/signature/')),
                ('ict_cleared', models.BooleanField(default=False)),
                ('dept_cleared', models.BooleanField(default=False)),
                ('profile_picture', models.FileField(blank=True, null=True, upload_to=accounts.models.StudentUser.profile_picture_upload_path)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_department', to='accounts.department')),
                ('faculty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_faculty', to='accounts.faculty')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_user', to=settings.AUTH_USER_MODEL, unique=True)),
            ],
            options={
                'verbose_name_plural': 'StudentUsers',
            },
        ),
        migrations.CreateModel(
            name='UAOUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('signature', models.FileField(upload_to='media/uao/signature/')),
                ('stamp', models.FileField(upload_to='media/uao/stamp/')),
                ('students', models.ManyToManyField(related_name='all_students', to='accounts.studentuser')),
                ('uao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uao_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'UAOUsers',
            },
        ),
        migrations.CreateModel(
            name='SenateUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('senate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='senate_user', to=settings.AUTH_USER_MODEL)),
                ('students', models.ManyToManyField(related_name='gen_students', to='accounts.studentuser')),
            ],
            options={
                'verbose_name_plural': 'SenateUsers',
            },
        ),
        migrations.CreateModel(
            name='ScreenUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='screen_department', to='accounts.department')),
                ('faculty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='screen_department', to='accounts.faculty')),
                ('screener', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='screener_user', to=settings.AUTH_USER_MODEL)),
                ('students', models.ManyToManyField(related_name='screeners', to='accounts.studentuser')),
            ],
            options={
                'verbose_name_plural': 'ScreenUsers',
            },
        ),
        migrations.CreateModel(
            name='SAOUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('faculty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sao_faculty', to='accounts.faculty')),
                ('sao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sao_user', to=settings.AUTH_USER_MODEL)),
                ('students', models.ManyToManyField(related_name='faculty_students', to='accounts.studentuser')),
            ],
            options={
                'verbose_name_plural': 'SAOUsers',
            },
        ),
        migrations.CreateModel(
            name='DAOUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dao_user', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dao_department', to='accounts.department')),
                ('students', models.ManyToManyField(related_name='sdept_students', to='accounts.studentuser')),
            ],
            options={
                'verbose_name_plural': 'DAOUsers',
            },
        ),
    ]
